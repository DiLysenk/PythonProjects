#!/usr/bin/env python
from math import ceil

"""
Отприлагать

Для заданной строки, если её длина больше 2-х, w добавить "ий" на конец.
Однако если она уже оканчивается на ий, добавить перед "ий" "ейш"
Вернуть получившуюся строку
Для строки меньшей длины вернуть её самму
Пример: "син" -> "синий"
        "синий" -> "синейший"
        "ад" -> "ад"
"""


def adjective(string):
    if len(string) > 2 and string[-2:] != "ий":
        return (string + "{}").format("ий")
    elif string[-2:] == "ий" and len(string) > 2:
        return (string[:-2] + "{}" + string[-2:]).format("ейш")
    else:
        return string


"""
Не плохо

Для заданной строки, найти первые появление подстрок "не" и "плохо"
Если "не" идёт до "плохо", до заменить всю подстроку с "не" ... "плохо"
на "хорошо", для всех других случаев ничего со строкой не делать
Вернуть получившуюся строку

Пример: "Решать задания не так уж и плохо." -> "Решать задания хорошо."
"""


def not_bad(string):
    if string.find("не") >= 0: # проверка на вхлждение "не"
        if string.find("плохо") >= 0:       # проверка на вхождение "плохо"
            if string.find("не") < string.find("плохо"): # проверка на случай если "плохо" раньше чем "не"
                return (string[:string.index("не")] + "{}" + string[string.index("плохо") + len("плохо"):]).format("хорошо")
            else:
                return string
        else:
            return string
    else:
        return string


"""
Конец начала

Для заданных двух строк a и b, разбить их на две половины:
если длина нецелая, то средний символ идёт в первую половину
Вернуть строку, вида
начало_а + начало_b + конец_a + конец_b
"""


def front_back(a, b):
    half_a = ceil(len(a)/2)
    half_b = ceil(len(b)/2)
    string = a[:half_a] + b[:half_b] + a[half_a:] + b[half_b:]
    return string




"""
Валиден ли ip адресс

Написать предикат, то есть функцию, вовзращающую логическое значение,
Является ли аргумент строкой с описанием ipv4 адреса в
форме десятичной с точками (dotted decimal notation)

https://en.wikipedia.org/wiki/IPv4
"""


def is_ddn_ipv4(string):
    x = 0
    if type(string) == str:                                          # проверка типа
        if string.count(".") == 3:                                   # проверка количества точек
            for _ in range(len(string.split('.'))):                  # проверка октетов, что бы они были меньше чем 256
                if 0 <= (int(string.split('.')[_])) < 256:
                    x += 1                                            # x = количество октетов, больше
    return x == 4



